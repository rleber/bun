


.&...&..
fass























.sy ./if ! -r macros.r free x idallen/fz macros.r   
.so macros.r
.ii 5 3 
.at(x1) 
.sp 
.ne6
.nf 
^^(sain +5) 
.tr~~   
.cc:
.en(x1) 
.at(x2) 
:cc.
.tr~    
^^(rein)
.fi 
.en(x2) 
.at(foot)   
.fo "F.A.S.S. 1979"^^(titl)"^(year)/^(mon)/^(day) ^(hour):^(min)"   
.en(foot)   
.he "=========="- % -"=========="   
.hd 0 Basic~ROFF~Information
^(foot) 
.pb 
Roff is a text formatting program that allows you to type in text (in the   
case of FASS, your scene) without regard to the final format it will have.  
You simply include a one-line character abbreviation before each character's
speech and before and after all sound effects, lighting effects and stage   
directions.  Roff does the rest.
.pb 
Roff takes care of things like margins, page headings and footings, page
numbering, and all the other details involved.  Most of these things are
not important if you're just writing an individual scene, and so this explain   
will not be very detailed.  
.pb 
There is a two-letter abbreviation for each character in the show, and other
abbreviations for things like songs, stage directions, special sound and    
lighting cues.  Each abbreviation is placed on a line by itself immediately 
above the line or lines it refers to, and each of these abbreviation lines  
begins with a period (to distinguish it from the text of the scene).
The pertinent abbreviations are as follows: 
.sp 
.ne12   
^(sain +5)  
^(saif 0)   
.cc:
.so  insert an external file, such as the file 79macs.r 
.bs	begin the scene (this is the second line of every scene)
.bf	next line of input is to be set in boldface 
.ul	next line of input is to be underlined  
.sp	skip one blank line on output   
.ne  make sure a group of lines doesn't split over page 
.xx  give a name for a one-use-only character   
.sd	begin a sound direction 
.ld  begin a lighting direction 
.ad	begin an acting direction   
.ex	end a description or direction  
.sb	begin a song (see below)
.se	end a song  
:cc.
^(rein) 
^(reif) 
.pb 
Note that many of the formatting commands have "arguments" which must or
may be supplied on the same line as the command.  See below for descriptions
of exactly what these are.  
.pb 
A file containing formatting commands such as those above can be expanded   
into a fully formatted document by simply typing "roff filename" at system  
level, where "filename" is the file in which the text and commands are. The 
formatted text may be placed in a file by typing "roff filename >file2" 
where "file2" is the place where the formatted (or "roffed") document is to 
be placed.  If it does not already exist it will be created as a temporary  
file.  You may obtain a printed copy by typing "klist file2"  at system level   
(note that you may also use slist (and not tlist) to print it.  
Klist should normally be used, to save paper).  
.hd 0 Three~Types~Of~Scripts
^(foot) 
.pb 
Scripts may be produced, from the same macro file, in any one of three  
formats: Normal, Technical, or Good.
How the script appears is a function of the value of register "TYPE",   
which may have the value 0 for Normal, "TECH" for Technical, or "GOOD"  
for Good.  Note that Normal is the default, since if the "TYPE" register
is undefined ROFF gives it the value 0.  To produce either of the other 
formats, preface the macro file with a file which sets the "TYPE" register. 
.li 6   
.bf 
.it 
Normal Format:  
.sl +2  
.pt 
- Every speech in a scene will be numbered  
consecutively.  This is reset at the beginning of each scene.   
The first time a character appears, their full name will be used;   
thereafter a shorter version.   
.pt 
- Speeches separated by one blank line  
.pt 
- Speeches indented 3 spaces
.se 
.bf 
.it 
Technical Format:   
.sl +2  
.pt 
- Every speech in a scene numbered  
.pt 
- Speeches separated by one blank line  
.pt 
- Speeches indented 3 spaces
.se 
.bf 
.it 
Good Format:
.sl +2  
.pt 
- For proof copies  
.pt 
- Speeches not numbered 
.pt 
- Speeches separated by one blank line  
.pt 
- Speeches indented 5 spaces
.se 
.le 
.hd 0 Entering~a~Scene  
^(foot) 
.sp 
A scene opens with the following format:
.x1 
.so 79macs.r
.bs 1 1 This~is~the~Title   
.na c1 Full~Name~of~Character1 Short~Name   
.na c2 Full~Name~of~Character2 Short~Name   
.na c3 Full~Name~of~Character3 Short~Name   
     .  
     .  
     .  
:x2 
.hd 2 "Notes:"  
.sl +2  
.pt 
- .so 79macs.r  
.br 
This inserts the main macro file of macro definitions and   

makes sure that a consistent environment is set up in terms of line 
length, justification, etc. 
.sp 
.pt 
- .bs   
.br 
Begin a scene.  The first argument is either 1 or 2 for Act I or
Act II.  The second argument is the scene number.   
Both arguments, unlike previous years, must be numbers and not letters. 
The last argument is the title of the scene, which must be less than
50 characters long!  Join it with tildes, or enclose it in quotes.  
.sp 
.pt 
- .na <2chars> <full-name> <abbrev.-name>   
.br 
This creates for you a ROFF macro for your character.  The two character
macro name must be unique, and must not be a ROFF command. (To verify   
that the macro is not a ROFF command, type  
.sp 
.ti5
"system~?grep~'\c.xx~'~expl/roff/summ"  
.sp 
where "xx" is the macro name you are considering.   
If the name is a ROFF command, grep will print the command, otherwise,  
you will get the message "no match".
This means you may use your two character macro name.   
The <full-name> is the full name of the character, which will   
appear the first time the character is used in a scene. 
After this first appearance, the <abbrev.-name> will be used.   

Make sure that each name is surrounded by quotes, or is joined by   
tildes. 
.se 
.ne6
.pb 
In some cases, you want to have two characters talk at once, or you may 
have a character who isn't really worth a macro to her/him self.
Use the construction:   
.sp 
.ti5
.tr~~   
.cc:
.xx Character~1~&~Character~2   
:cc.
.tr~    
.sp 
This will format the following speech by the character in the same way  
as if you had a macro defined for her/him.  
It is the only way to have two names appear heading one speech. 
Make sure to use tildes to join the words together, or else put the 
argument in double quotes.  
.hd 0 Entering~Songs
^(foot) 
.sp 
Songs are surrounded by "environment control" macros which set up the   
correct indents and lack of fill and justification: 
.x1 
.sb I'm~Dreaming~of~a~White~Lemming  White~Christmas
I'm dreaming of a white 
Lemming.
Just like the mice I used to know   
:ne7
.sp 
.ne4
When the days seem  
chilly and bright.  
May all your shirt collars  
Be white.   
.se 
:x2 
.hd 2 "Notes:"  
.sl +2  
.pt 
- .sb <Our~Song~Title> <The~REAL~Song~Title>
.br 
This sets the titles in a nice box of asterisks, with our song title
first, and the real song title following the words "to the tune of:".   
Both titles must be less than 45 characters long.   
.sp 
.pt 
- .sp   
.br 
This puts a blank line between verses 1 and 2.  
.sp 
.pt 
- .ne4  
.br 
This is needed to make sure that a song is not split in the middle of   
a verse.  Replace the number "4" by the number of lines up to the next  
".sp" or ".se".  This will have ROFF start a new page if it can't fit   
the specified number of lines onto the current page; hence, the verse   
will be kept together and will start the new page.  
Use .sp followed by .ne<nn> to separate each verse. 
.sp 
.pt 
- .se   
.br 
Song End.  This cancels the environments set up by the preceeding ".sb",
and restores the previous environment.  
REMEMBER TO END WITH ".se". 
.se 
.hd 0 Technical~and~Stage~Directions
^(foot) 
.sp 
This year, stage directions and technical directions for sound and  
light are each being kept distinct.  This should help our over-worked   
technical staff and at the same time make our authors conscious about   
the demands they are placing.   

Actor (stage) directions, sound directions, and lighting directions 
must be surrounded by "environment control" macros, in a similar manner 
to songs.   
This is the format: 
.x1 
.ld 
(THIS IS AN UPPER-CASE LIGHTING-DIRECTION   
WHICH MAY COVER SEVERAL LINES.  
IT IS SURROUNDED BY PARENTHESES)
.ex 
.sd 
(THIS IS A SOUND-DIRECTION, USING THE SAME FORMAT)  
.ex 
.ad 
(THIS IS AN ACTOR-DIRECTION 
{FOR ACTION ON STAGE} USING THE SAME FORMAT)
.ex 
:x2 
.hd 2 "Notes:"  
.sl +2  
.pt 
- .ld, .sd, .ad 
.br 
These begin lighting, sound, and actor directions respectively. 
Each ends with the ".ex" terminator (DO NOT FORGET IT!).
These directions are upper case and surrounded by parentheses, to   
distinguish them from actors' speeches. 
.pt 
- .ex   
.br 
Exit.  This cancels the environment set up by the preceeding
.ld, .sd, or .ad and restores the previous environment. 
.se 
.pb 
For simple directions to the actors, place the short direction in   
parentheses in the actor's speech.  Keep such directions upper case!
.br 
.ne6
Example:
.sp 
^(sain +5)  
^(saif 0)   
.cc:
.fh 
(MOVES LEFT) I'm the captain around here! (COUGHS)  
Where's Dave?   
:cc.
^(rein) 
^(reif) 
.ne6
.sp 
Light and sound cues should really be surrounded by their macros, no
matter how trivial.  This will mean splitting some speeches around  
these directons:
.sp 
.ne8
^(sain +5)  
^(saif 0)   
.cc:
.fh 
(MOVES TO TELEPHONE) I wonder what will happen next.
.sd 
(TELEPHONE RINGS)   
.ex 
I might have known.  (ANSWERS PHONE) Hello? 
:cc.
^(rein) 
^(reif) 
.sp 
.ne6
Note that another ".fh" is not necessary after the sound direction. 
The actor will skip the sound direction and continue afterward. 
An exception to this rule may occur if the direction is very long,  
in which case you should repeat the character macro (e.g. ".fh") after  
the direction's ending ".ex".   
