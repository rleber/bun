<%
    def err(message)
      raise Fass::Script::ScriptError, message
    end
    
    def split_scene(number)
      if number.is_a?(Numeric)
        act, scene = number.divmod(1.0)
        while (scene.to_i - scene).abs > 0.05
          scene *= 10
        end
        scene = scene.to_i
      else
        err "Bad scene number #{number}" unless number =~ /^\s*(\d+)\s*(?:\.|:)\s*(\d+)\s*$/
        act, scene = [$1, $2].map{|s| s.to_i}
      end
      err "Invalid act number #{act}" if act<=0
      err "Invalid scene number #{scene}" if scene<=0
      [act, scene]
    end
    
    def scene(number, &block)
      act, scene = split_scene(number)
      Ember::Template.wrap_content_block(block) do |content|
        "*** Act #{act}, Scene #{scene} ***\n#{content.join}"
      end
    end
    
    def character(nickname, fullname)
      # Do nothing
    end
    
    def line(nickname, options={}, &block)
      err "Character #{nickname} not defined (in pass 2)" unless $characters[nickname]
      wrap = options.has_key?(:wrap) ? options[:wrap] : true
      Ember::Template.wrap_content_block(block) do |content|
        text = if wrap
            content.join.gsub(/\n/m,' ').gsub(/\s+/,' ').strip
        else
            content.join
        end
        "#{$characters[nickname][:full_name]}: #{text}"
      end
    end
    
    def direction(options={}, &block)
      wrap = options.has_key?(:wrap) ? options[:wrap] : true
      Ember::Template.wrap_content_block(block) do |content|
        text = if wrap
            content.join.gsub(/\n/m,' ').gsub(/\s+/,' ').strip
        else
            content.join
        end
        "< #{text} > "
      end
    end
    
    def song(title, tune, &block)
      Ember::Template.wrap_content_block(block) do |content|
          ["Song: #{title}\n",
          "To the tune of: #{tune}\n"] +
          content
      end
    end
    
    def characters
      nickname_width = $characters.keys.map{|nick| nick.size}.max
      table = [
          "Character List\n"
      ]
      $characters.keys.sort.each do |nick|
        table << %Q{#{"%-#{nickname_width+1}s"%(nick+':')} #{$characters[nick][:full_name]}\n}
      end
      table
    end
-%>