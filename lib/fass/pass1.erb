<%
    $characters = {}
    $acts = []
    
    def err(message)
      raise Fass::Script::ScriptError, message
    end
    
    def scene(number, &block)
      if number.is_a?(Numeric)
        act, scene = number.divmod(1.0)
        while (scene.to_i - scene).abs > 0.05
          scene *= 10
        end
        scene = scene.to_i
      else
        err "Bad scene number #{number}" unless number =~ /^\s*(\d+)\s*\.\s*(\d+)\s*$/
        act, scene = [$1, $2].map{|s| s.to_i}
      end
      err "Invalid act number #{act}" if act<=0
      err "Invalid scene number #{scene}" if scene<=0
      puts "Act #{act.inspect}, Scene #{scene.inspect} defined"
      $acts[act] ||= []
      $acts[act][scene] = {}
      Ember::Template.wrap_content_block(block) do |content|
        content
      end
    end
    
    def character(nickname, fullname)
      $characters[nickname] = {:nickname=>nickname, :full_name=>fullname, :line_count=>0}
    end
    
    def line(nickname, options={}, &block)
      err "Character #{nickname} not defined" unless $characters[nickname]
      Ember::Template.wrap_content_block(block) do |content|
          content
      end
    end
    
    def direction(options={}, &block)
      Ember::Template.wrap_content_block(block) do |content|
          content
      end
    end
    
    def characters
      []
    end
-%>